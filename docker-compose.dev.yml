services:
  db:
    image: postgres:alpine
    container_name: db_blog
    restart: unless-stopped
    networks:
      - blog_net
    env_file: backend/.env
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 7s
      timeout: 3s
      retries: 10

  backend:
    build: backend/
    container_name: backend_blog
    env_file: backend/.env
    restart: unless-stopped
    command: >
      sh -c "
        python manage.py migrate &&
        python manage.py runserver 0.0.0.0:8000
      "
    ports:
      - 8000:8000
    networks:
      - blog_net
    volumes:
      - ./backend/:/app
    depends_on:
      db:
        condition: service_healthy

  frontend:
    build: frontend/
    container_name: frontend_blog
    command: sh -c "npm run dev"
    restart: unless-stopped
    ports:
      - 3000:3000
    networks:
      - blog_net
    environment:
      - VITE_API_URL=http://0.0.0.0:8000/api/v1
    volumes:
      - ./frontend/:/app
      - /app/node_modules
    depends_on:
      - backend

networks:
  blog_net:
     driver: bridge
